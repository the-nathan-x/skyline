/*
 * Bones Scripts File
 * Author: Eddie Machado
 *
 * This file should contain any js scripts you want to add to the site.
 * Instead of calling it in the header or throwing it inside wp_head()
 * this file will be called automatically in the footer so as not to
 * slow the page load.
 *
 * There are a lot of example functions and tools in here. If you don't
 * need any of it, just remove it. They are meant to be helpers and are
 * not required. It's your world baby, you can do whatever you want.
*/


/*
 * Get Viewport Dimensions
 * returns object with viewport dimensions to match css in width and height properties
 * ( source: http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript )
*/
function updateViewportDimensions() {
	var w=window,d=document,e=d.documentElement,g=d.getElementsByTagName('body')[0],x=w.innerWidth||e.clientWidth||g.clientWidth,y=w.innerHeight||e.clientHeight||g.clientHeight;
	return { width:x,height:y };
}
// setting the viewport width
var viewport = updateViewportDimensions();


/*
 * Throttle Resize-triggered Events
 * Wrap your actions in this function to throttle the frequency of firing them off, for better performance, esp. on mobile.
 * ( source: http://stackoverflow.com/questions/2854407/javascript-jquery-window-resize-how-to-fire-after-the-resize-is-completed )
*/
var waitForFinalEvent = (function () {
	var timers = {};
	return function (callback, ms, uniqueId) {
		if (!uniqueId) { uniqueId = "Don't call this twice without a uniqueId"; }
		if (timers[uniqueId]) { clearTimeout (timers[uniqueId]); }
		timers[uniqueId] = setTimeout(callback, ms);
	};
})();

// how long to wait before deciding the resize has stopped, in ms. Around 50-100 should work ok.
var timeToWaitForLast = 100;


/*
 * Here's an example so you can see how we're using the above function
 *
 * This is commented out so it won't work, but you can copy it and
 * remove the comments.
 *
 *
 *
 * If we want to only do it on a certain page, we can setup checks so we do it
 * as efficient as possible.
 *
 * if( typeof is_home === "undefined" ) var is_home = $('body').hasClass('home');
 *
 * This once checks to see if you're on the home page based on the body class
 * We can then use that check to perform actions on the home page only
 *
 * When the window is resized, we perform this function
 * $(window).resize(function () {
 *
 *    // if we're on the home page, we wait the set amount (in function above) then fire the function
 *    if( is_home ) { waitForFinalEvent( function() {
 *
 *	// update the viewport, in case the window size has changed
 *	viewport = updateViewportDimensions();
 *
 *      // if we're above or equal to 768 fire this off
 *      if( viewport.width >= 768 ) {
 *        console.log('On home page and window sized to 768 width or more.');
 *      } else {
 *        // otherwise, let's do this instead
 *        console.log('Not on home page, or window sized to less than 768.');
 *      }
 *
 *    }, timeToWaitForLast, "your-function-identifier-string"); }
 * });
 *
 * Pretty cool huh? You can create functions like this to conditionally load
 * content and other stuff dependent on the viewport.
 * Remember that mobile devices and javascript aren't the best of friends.
 * Keep it light and always make sure the larger viewports are doing the heavy lifting.
 *
*/

/*
 * We're going to swap out the gravatars.
 * In the functions.php file, you can see we're not loading the gravatar
 * images on mobile to save bandwidth. Once we hit an acceptable viewport
 * then we can swap out those images since they are located in a data attribute.
*/
function loadGravatars() {
  // set the viewport using the function above
  viewport = updateViewportDimensions();
  // if the viewport is tablet or larger, we load in the gravatars
  if (viewport.width >= 768) {
  jQuery('.comment img[data-gravatar]').each(function(){
    jQuery(this).attr('src',jQuery(this).attr('data-gravatar'));
  });
	}
} // end function

// from http://stackoverflow.com/questions/21741841/detecting-ios-android-operating-system
/**
 * Determine the mobile operating system.
 * This function returns one of 'iOS', 'Android', 'Windows Phone', or 'unknown'.
 *
 * @returns {String}
 */
function getMobileOperatingSystem() {
  var userAgent = navigator.userAgent || navigator.vendor || window.opera;

      // Windows Phone must come first because its UA also contains "Android"
    if (/windows phone/i.test(userAgent)) {
        return "Windows Phone";
    }

    if (/android/i.test(userAgent)) {
        return "Android";
    }

    // iOS detection from: http://stackoverflow.com/a/9039885/177710
    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {
        return "iOS";
    }

    return "unknown";
}

/******************/
/* REPORT BY YEAR */
/******************/

function openYear(event, year) {
  // Declare all variables
  var i, tabcontent, tablinks;

  // Get all elements with class="tabcontent" and hide them
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
      tabcontent[i].style.display = "none";
  }

  // Get all elements with class="tablinks" and remove the class "active"
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
      tablinks[i].className = tablinks[i].className.replace(" active", "");
  }

  // Show the current tab, and add an "active" class to the button that opened the tab
  document.getElementById(year).style.display = "block";
  
  var link = event.currentTarget;
  if(link == null){
    tablinks[0].className += " active";
  }
  else{
    link.className += " active";
  }
}


// Get the element with id="defaultOpen" and click on it


/*
 * Put all your regular jQuery in here.
*/
jQuery(document).ready(function($) {

  $("#defaultOpen").click();
  /*
   * Let's fire off the gravatar function
   * You can remove this if you don't need it
  */
  loadGravatars();

  $('#menu-open').on('click',function(e) {
    $(e.target).parents('.header').addClass('mobile-expanded');
  });
  $('#menu-close').on('click',function(e) {
    $(e.target).parents('.header').removeClass('mobile-expanded');
  });

  /******************/
  /* MAIN MENU      */
  /******************/

  
  $('.header-nav').find('.top-level > li > a').on('focus',function(e) {
    if ($('.header-nav').css('position') != 'absolute') {
      $('.header-nav').find('.top-level > .active').removeClass('active');
      $(e.target).parents('li').addClass('active');
    }
  }).on('click',function(e) {
    if ($(e.target).attr('href') == '#') {
      e.preventDefault();
    }
    if ($('.header-nav').css('position') == 'absolute' && $(e.target).siblings().length > 0) {
      e.preventDefault();
      if ($(e.target).parents('li').hasClass('active')) {
        $(e.target).parents('li').removeClass('active');
      } else {
        $(e.target).parents('li').addClass('active');
      }
    }
  }).on('hover',function(e) {
    if ($('.header-nav').css('position') != 'absolute') {
      $('.header-nav').find('.top-level > .active').removeClass('active');
      $('.header-nav').find('.top-level > li > a').blur();
    }
  });
  

  $('.mobile-menu-button').find('button').on('click',function(e) {
    $('.header-nav').toggle();
  });

  /******************/
  /* BOOKING BAR    */
  /******************/

  $('.book-js').find('h2').on('click',function(e) {
    e.preventDefault();
    console.log(".book-js",$('.booking-bar').css('position'));
    if ($('.booking-form').css('position') == 'absolute') {
      $('.book-js').toggleClass('expanded');
    }
  });

  /******************/
  /* EVENT FILTER   */
  /******************/


  if($('#header') != null) {
    $( "#cat_options" ).val($('#header').data("cat"));
    $( "#month_options" ).val($('#header').data("month"));
  }

  //unction apply_filter() 
  window.apply_filter = function(){
    var cat = month = '';
    if ($( "#cat_options" ).val() != 0){
      cat = 'cat_id='+$( "#cat_options" ).val()+'&'
    }
    if ($( "#month_options" ).val() != 0){
      month = 'month_id='+$( "#month_options" ).val()+'&'
    }
    window.location.href = $('#header').data("url") + '?' + cat + month;
  }

  /******************/
  /* BLOG FILTER   */
  /******************/

  //unction apply_filter() 
  window.apply_tag_filter = function(){
    var tag = '';
    if ($( "#tag_options" ).val() != 'all'){
      tag = $( "#tag_options" ).val()
      window.location.href = $('#header').data("url") + '/tag/' + tag;
    } else {
      window.location.href = $('#header').data("url") + '/blog/';
    }
    
  }

  /******************/
  /* WEATHER REPORT */
  /******************/

  if ($('#report-weather').length > 0) {
    // console.log("#report-weather",json);
    $.ajax({
      dataType: "json",
      url: json,
      success: function(data) {
        console.log("#report-weather",data);
        var $cur = $('#current');
        var img = document.createElement('img');
        img.src = imagePath+data.weather[0].icon+'.svg?d='+Date.now();
        $cur.find('.data').text(Math.round(data.main.temp));
        $cur.find('.icon').append($(img));
        $cur.find('.desc').text(data.weather[0].description);
        $('#temp-low').find('.data').text(Math.round(data.main.temp_min));
        $('#temp-high').find('.data').text(Math.round(data.main.temp_max));
        $('#report-weather').find('.temp').show();
      }
    });
  }

  if ($('#current-weather').length > 0) {
    // console.log("#current-weather",json);
    $.ajax({
      dataType: "json",
      url: json,
      success: function(data) {
        console.log("#current-weather",data);
        var img = document.createElement('img');
        img.src = imagePath+data.weather[0].icon+'.svg?d='+Date.now();
        $('#current-weather').find('.data').text(Math.round(data.main.temp));
        $('#current-weather').find('.icon').append($(img));
        $('#current-weather').find('.loading').removeClass('loading');
      }
    });
  }

  /******************/
  /* DATE PICKER    */
  /******************/

  /*

  if (getMobileOperatingSystem() != 'iOS' && getMobileOperatingSystem() != 'Android' && !(window.navigator.userAgent.indexOf("Edge") > -1)) {
    var minCheckOutDate = moment().add('days', 1);
    var pickerIn = new Pikaday({
        field: document.getElementById('checkinField'),
        format: 'YYYY-MM-DD',
        minDate: new Date(),
        onSelect: function() {
          $('#checkoutField').val(this.getMoment().add('days',1).format('YYYY-MM-DD')).removeClass('clean');
        }
    });
    var pickerOut = new Pikaday({
        field: document.getElementById('checkoutField'),
        format: 'YYYY-MM-DD',
        minDate: new Date(minCheckOutDate.format())
    });
    $('#checkinField').on('change',function(e) {
      $(e.target).removeClass('clean');
      pickerOut.setMinDate(new Date(moment(e.target.value).add('days',1).format()));
    });
  } else if (getMobileOperatingSystem() == 'iOS' || getMobileOperatingSystem() == 'Android' || window.navigator.userAgent.indexOf("Edge") > -1) {
    $('#checkinField').on('change',function(e) {
      $('#checkoutField').val(moment(e.target.value).add('days',1).format('YYYY-MM-DD')).removeClass('clean');
    });
  }

  */



}); /* end of as page load scripts */
